<launch>
    
    <!-- 设置launch文件的参数 -->
    <arg name="world_name" value="$(find mbot_gazebo)/worlds/playground.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="model" default="$(find xacro)/xacro --inorder '$(find mbot_description)/urdf/mbot_with_laser_and_kinect_gazebo.xacro'"/>

    <!-- 设置GUI参数，显示关节控制插件 -->
    <param name="use_gui" value="$(arg gui)"/>

    <!-- 运行gazebo仿真环境 -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="headless" value="$(arg headless)"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- 加载机器人模型描述参数 -->
    <!-- robot_state_publisher looks for the parameter "robot_description" by default. -->
    <param name="robot_description" command="$(arg model)"/> 

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态 -->
    <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" />

    <!-- 运行robot_state_publisher节点，发布tf -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
        <param name="publish_frequency" type="double" value="50.0"/>
    </node>

    <!-- 在gazebo中加载机器人模型 -->
    <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" output="screen" respawn="false" args="-urdf -model mrobot -param robot_description" />
    
    <!-- 运行rviz可视化界面 -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find mbot_description)/config/mbot_urdf.rviz" required="true" />

</launch>
